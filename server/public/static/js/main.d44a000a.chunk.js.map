{"version":3,"sources":["components/authApi/AuthService.js","components/authApi/Signup.js","components/authApi/Profile.js","components/authApi/Login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","lang","country","description","genre","year","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","_this$state$user","state","user","console","log","setState","redirect","catch","error","handleChange","_event$target","target","name","value","objectSpread","defineProperty","_this2","react_default","a","createElement","react_router","to","onSubmit","type","onChange","e","react_router_dom","Component","Profile","loggedInUser","className","Login","App","fetchUser","x","setTheUser","userObj","authService","exact","path","render","authApi_Signup","setUser","userInSession","authApi_Login","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d44a000a.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:3010/api/auth',\n      withCredentials: true\n    });\n  }\n\n\n  // , lang, country, description, genre,year\n  signup = (username, password, lang, country, description, genre,year) => {\n    return this.service.post('/signup', {username, password, lang, country, description, genre,year})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        username: \"\",\n        password: \"\",\n        lang: \"\",\n        country: \"\",\n        description:\"\",\n        genre: \"\",\n        year: 1990,\n        redirect: false,\n      },      \n    };\n\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    // , lang, country, description, genre,year\n    const {username, password,lang, country, description, genre,year} = this.state.user\n    console.log(username, password)\n\n\n    // , lang, country, description, genre,year\n    this.service.signup(username, password, lang, country, description, genre,year)\n    .then( () => {\n      console.log(username)\n        this.setState({\n            username: \"\", \n            password: \"\",\n            lang: \"\",\n            country: \"\",\n            description: \"\",\n            genre: \"\",\n            year: 1990,\n            redirect: true\n        });\n        // this.props.getUser(response)\n    })\n    .catch( error => console.log(error) )\n  }\n\n \n  handleChange = event => {\n    const { name, value } = event.target;\n \n    this.setState({ user:{ ...this.state.user, [name]: value } });\n    \n  };\n\n  render(){\n    if (this.state.redirect) {\n      return <Redirect to='/login'/>\n    }\n    \n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n\n          <label>Languaje:</label>\n          <input type=\"text\" name=\"lang\" value={this.state.lang} onChange={ e => this.handleChange(e)}/>\n\n          <label>Description:</label>\n          <input type=\"text\" name=\"description\" value={this.state.description} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Country:</label>\n          <input type=\"text\" name=\"country\" value={this.state.country} onChange={ e => this.handleChange(e)} />\n         \n          <label>Genre:</label>\n          <input type=\"text\" name=\"genre\" value={this.state.genre} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Year:</label>\n          <input type=\"number\" name=\"year\" value={this.state.year} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"}> Login</Link>\n        </p>\n  \n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loggedInUser: null\n        }\n        // this.service = new ProfileService();\n    }\n\n   \n\n    render() {\n    \n      return (\n        <div>\n        <main>\n          <header className = \"profile-header text-center p-3 pt-5\">\n            <div className = \"user-greeting pt-5\" >\n              <h2><span>Hello, this is your profile</span>\n               \n               </h2>\n            </div>\n          </header>\n        </main>\n        </div>\n      )\n    }\n  }\n\n\nexport default Profile;","import React, { Component } from 'react';\nimport AuthService from \"./AuthService\";\nimport { Link, Redirect } from 'react-router-dom';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '',error: '',redirect: false };\n        this.service = new AuthService();\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const username = this.state.username;\n        const password = this.state.password;\n        this.service.login(username, password)\n             .then(() => {            \n                 this.setState({ redirect:true, \n                  username: \"\", password: \"\" },\n                   );\n             })\n            //  .catch(error => {\n            //     console.log(error)\n            //     this.setState({ error: error.response.data.message});\n            // })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n        // this.state.error = ''\n    }\n\n    render(){\n      if(this.state.redirect){ return <Redirect to='/profile'/>}\n      return(\n        \n        <div>\n          <form onSubmit={this.handleFormSubmit}>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n            \n            <input type=\"submit\" value=\"Login\" />\n          </form>\n          <p>Don't have account? \n              <Link to={\"/signup\"}> Signup</Link>\n          </p>\n        </div>\n      )\n    }\n}\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\n\n// Components\nimport Signup from \"./components/authApi/Signup\"\nimport Profile from \"./components/authApi/Profile\"\nimport Login from \"./components/authApi/Login\"\n// import Profile from \"./components/Profile\"\n// import ProtectedRoutes from \"./components/auth/ProtectedRoutes\"\n// Routing & DOM\nimport { Switch, Route } from 'react-router-dom'\n// Service\nimport authService from './components/authApi/AuthService';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { loggedInUser: null }\n    this.service = new authService()\n  }\n\n\n  fetchUser = () => {\n\n      this.service.loggedin()\n        .then(response => {\n          console.log(response)\n          this.setState({ loggedInUser: response })})\n        .catch(x => this.setState({ loggedInUser: false }))\n    \n  }\n\n  setTheUser = (userObj) => { this.setState({ loggedInUser: userObj }) }\n\n  render() {\n\n    const { loggedInUser } = this.state\n\n    if (loggedInUser) {\n      return (\n        \n        <div>\n        <p>estas logueado</p>\n          <Switch>\n            {/* <ProtectedRoutes user={this.state.loggedInUser} exact path='/profile' component={Profile} checkIfLogged={this.fetchUser}/> */}\n          </Switch>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n          <p>no estas logueado</p>\n          <Switch>\n            <Route exact path='/signup' render={() => <Signup setUser={this.setTheUser} userInSession={this.state.loggedInUser}/>} />\n            <Route exact path='/login' render={() => <Login setUser={this.setTheUser} userInSession={this.state.loggedInUser} />} /> \n            <Route user={this.state.loggedInUser} exact path='/profile' component={Profile} />\n          </Switch>\n\n        </div>\n        \n      )\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}